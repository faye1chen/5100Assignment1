/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.EmployeeDirectory;
import model.EmployeeProfile;

/**
 *
 * @author faye
 */
public class ViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    
    EmployeeDirectory directory;
    
    public ViewJPanel(EmployeeDirectory directory) {
        initComponents();
        
        this.directory = directory;
        
        populateTable();


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbProfiles = new javax.swing.JTable();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        lblID = new javax.swing.JLabel();
        lblLevel = new javax.swing.JLabel();
        lblemailaddress1 = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        txtLevel = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        lblTeaminfo = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        txtTeaminfo = new javax.swing.JTextField();
        txtID = new javax.swing.JTextField();
        lblPositiontitle = new javax.swing.JLabel();
        txtPositiontitle = new javax.swing.JTextField();
        lblContactInfo = new javax.swing.JLabel();
        lblCellphonenumber = new javax.swing.JLabel();
        lblemailaddress = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblStartdate = new javax.swing.JLabel();
        txtCellphonenumber = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtStartdate = new javax.swing.JTextField();
        txtEmailaddress = new javax.swing.JTextField();
        txtSearch = new javax.swing.JTextField();
        btnView = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        comboGender = new javax.swing.JComboBox<>();
        lblImage = new javax.swing.JLabel();

        lblTitle.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("View profiles");

        tbProfiles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Employee ID", "Age", "Gender", "Start date", "Level", "Team info", "Position title", "Cell phone number", "email address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbProfiles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbProfilesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbProfiles);

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblID.setText("Employee ID:");

        lblLevel.setText("Level:");

        lblemailaddress1.setText("Photo:");

        txtAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgeActionPerformed(evt);
            }
        });

        txtLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLevelActionPerformed(evt);
            }
        });

        lblAge.setText("Age:");

        lblTeaminfo.setText("Team info:");

        lblGender.setText("Gender:");

        txtTeaminfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTeaminfoActionPerformed(evt);
            }
        });

        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        lblPositiontitle.setText("Position title:");

        txtPositiontitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPositiontitleActionPerformed(evt);
            }
        });

        lblContactInfo.setText("Contact Info");

        lblCellphonenumber.setText("Cell phone number:");

        lblemailaddress.setText("email address:");

        lblName.setText("Name:");

        lblStartdate.setText("Start date:");

        txtCellphonenumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCellphonenumberActionPerformed(evt);
            }
        });

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        txtStartdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStartdateActionPerformed(evt);
            }
        });

        txtEmailaddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailaddressActionPerformed(evt);
            }
        });

        txtSearch.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        jLabel1.setText("Search");

        comboGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "male", "female" }));
        comboGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboGenderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnUpdate)
                .addGap(18, 18, 18)
                .addComponent(btnDelete)
                .addGap(47, 47, 47))
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblemailaddress1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnView)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblGender)
                                    .addComponent(lblAge)
                                    .addComponent(lblID)
                                    .addComponent(lblName)
                                    .addComponent(lblPositiontitle)
                                    .addComponent(lblTeaminfo)
                                    .addComponent(lblLevel)
                                    .addComponent(lblStartdate))
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtID)
                                        .addComponent(txtAge)
                                        .addComponent(txtName)
                                        .addComponent(txtStartdate)
                                        .addComponent(txtLevel)
                                        .addComponent(txtTeaminfo, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtPositiontitle, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comboGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblemailaddress)
                                    .addComponent(lblContactInfo)
                                    .addComponent(lblCellphonenumber))
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtCellphonenumber, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEmailaddress, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(71, 71, 71))
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblTitle)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnView))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblemailaddress1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblID)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAge)
                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGender)
                            .addComponent(comboGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblStartdate)
                            .addComponent(txtStartdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLevel)))
                    .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTeaminfo)
                    .addComponent(txtTeaminfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPositiontitle)
                    .addComponent(txtPositiontitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblContactInfo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCellphonenumber)
                    .addComponent(txtCellphonenumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblemailaddress)
                    .addComponent(txtEmailaddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tbProfiles.getSelectedRow();
        
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this,"Please select a row to delete.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tbProfiles.getModel();
//        EmployeeProfile selectedProfile = (EmployeeProfile) model.getValueAt(selectedRowIndex, 0);
        
    //DefaultTableModel model = (DefaultTableModel) tbProfiles.getModel(); 
//    if a single row is selected
    if(tbProfiles.getSelectedRowCount() == 1){
        
        String name = txtName.getText();
        String id = txtID.getText();
        int age = Integer.parseInt(txtAge.getText());
//        String gender = txtGender.getText();
        String gender = (String)comboGender.getSelectedItem();
        String startdate = txtStartdate.getText();
        String level = txtLevel.getText();
        String teaminfo = txtTeaminfo.getText();
        String positiontitle = txtPositiontitle.getText();
        int phonenumber = Integer.parseInt(txtCellphonenumber.getText());
        String emailaddress = txtEmailaddress.getText();
        
//        populateTable();
//        
//        //put updated value on the row
        model.getValueAt(tbProfiles.getSelectedRow(), 0);
        model.setValueAt(id,tbProfiles.getSelectedRow(), 1);
        model.setValueAt(age,tbProfiles.getSelectedRow(), 2);
        model.setValueAt(gender,tbProfiles.getSelectedRow(), 3);
        model.setValueAt(startdate,tbProfiles.getSelectedRow(), 4);
        model.setValueAt(level,tbProfiles.getSelectedRow(), 5);
        model.setValueAt(teaminfo,tbProfiles.getSelectedRow(), 6);
        model.setValueAt(positiontitle,tbProfiles.getSelectedRow(), 7);
        model.setValueAt(phonenumber,tbProfiles.getSelectedRow(), 8);
        model.setValueAt(emailaddress,tbProfiles.getSelectedRow(), 9);
//        
        //update message
        JOptionPane.showMessageDialog(this,"Update successfully!");
//        
    }else{
        if(tbProfiles.getRowCount()==0){
            JOptionPane.showMessageDialog(this,"Table is empty now.");
        }else{
            JOptionPane.showMessageDialog(this,"Please select a single row for update.");
        }
    }
        //try to view the selected profile
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeActionPerformed

    private void txtLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLevelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLevelActionPerformed

    private void txtTeaminfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTeaminfoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTeaminfoActionPerformed

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    private void txtPositiontitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPositiontitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPositiontitleActionPerformed

    private void txtCellphonenumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCellphonenumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCellphonenumberActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtStartdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStartdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStartdateActionPerformed

    private void txtEmailaddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailaddressActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtEmailaddressActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tbProfiles.getModel();
        String search = txtSearch.getText().toLowerCase();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        tbProfiles.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(search));
        
    }//GEN-LAST:event_txtSearchKeyReleased

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tbProfiles.getSelectedRow();
        
//        if(tbProfiles.getSelectedRowCount() == 1){
//            //a single row is selected
//        DefaultTableModel model = (DefaultTableModel) tbProfiles.getModel();
//        EmployeeProfile selectedProfile = (EmployeeProfile) model.getValueAt(selectedRowIndex, 0);
//        
//        directory.deleteProfile(selectedProfile);
//        
//        
//        JOptionPane.showMessageDialog(this,"Employee Profile deleted.");
//        
//        populateTable();
//        
//        txtName.setText("");
//        txtID.setText("");
//        txtAge.setText("");
//        txtGender.setText("");
//        txtStartdate.setText("");
//        txtLevel.setText("");
//        txtTeaminfo.setText("");
//        txtPositiontitle.setText("");
//        txtCellphonenumber.setText("");
//        txtEmailaddress.setText("");
//            
//        }else{
//            if(tbProfiles.getSelectedRowCount()==0){
//                JOptionPane.showMessageDialog(this,"Table is Empty.");
//            }else{
//                //row is not selected or mutiple selected
//                JOptionPane.showMessageDialog(this,"Please select a single row to delete.");
//            }
//        }
        
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this,"Please select a row to delete.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tbProfiles.getModel();
        EmployeeProfile selectedProfile = (EmployeeProfile) model.getValueAt(selectedRowIndex, 0);
        
        directory.deleteProfile(selectedProfile);
        
        
        JOptionPane.showMessageDialog(this,"Employee Profile deleted.");
        
        populateTable();
        
        txtName.setText("");
        txtID.setText("");
        txtAge.setText("");
//        txtGender.setText("");
        txtStartdate.setText("");
        txtLevel.setText("");
        txtTeaminfo.setText("");
        txtPositiontitle.setText("");
        txtCellphonenumber.setText("");
        txtEmailaddress.setText("");
        lblImage.setIcon(null);
        
        
        
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tbProfilesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbProfilesMouseClicked
        // TODO add your handling code here:
        //set data to their textfield
        int selectedRowIndex = tbProfiles.getSelectedRow();
        
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this,"Please select a row to delete.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tbProfiles.getModel();
        
        //set data to text field when raw was selected
        EmployeeProfile selectedProfile = (EmployeeProfile) model.getValueAt(selectedRowIndex, 0);
        

        
        txtName.setText(selectedProfile.getName());
        txtID.setText(selectedProfile.getId());
        txtAge.setText(String.valueOf(selectedProfile.getAge()));
//        txtGender.setText(selectedProfile.getGender());
//        String gender = (String)comboGender.getSelectedItem();
        comboGender.setSelectedItem(String.valueOf(selectedProfile.getGender()));
        txtStartdate.setText(selectedProfile.getStartdate());
        txtLevel.setText(selectedProfile.getLevel());
        txtTeaminfo.setText(selectedProfile.getTeaminfo());
        txtPositiontitle.setText(selectedProfile.getPositiontitle());
        txtCellphonenumber.setText(String.valueOf(selectedProfile.getPhonenumber()));
        txtEmailaddress.setText(selectedProfile.getEmailaddress());
        lblImage.setIcon(selectedProfile.getImgIco());
        
        

     
    }//GEN-LAST:event_tbProfilesMouseClicked
//
    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tbProfiles.getSelectedRow();
        
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this,"Please select a row to delete.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tbProfiles.getModel();
        EmployeeProfile selectedProfile = (EmployeeProfile) model.getValueAt(selectedRowIndex, 0);
        
        txtName.setText(selectedProfile.getName());
        txtID.setText(selectedProfile.getId());
        txtAge.setText(String.valueOf(selectedProfile.getAge()));
        comboGender.setSelectedItem(String.valueOf(selectedProfile.getGender()));
        txtStartdate.setText(selectedProfile.getStartdate());
        txtLevel.setText(selectedProfile.getLevel());
        txtTeaminfo.setText(selectedProfile.getTeaminfo());
        txtPositiontitle.setText(selectedProfile.getPositiontitle());
        txtCellphonenumber.setText(String.valueOf(selectedProfile.getPhonenumber()));
        txtEmailaddress.setText(selectedProfile.getEmailaddress());
        lblImage.setIcon(selectedProfile.getImgIco());
        
    }//GEN-LAST:event_btnViewActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void comboGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboGenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboGenderActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnView;
    private javax.swing.JComboBox<String> comboGender;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblCellphonenumber;
    private javax.swing.JLabel lblContactInfo;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblLevel;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPositiontitle;
    private javax.swing.JLabel lblStartdate;
    private javax.swing.JLabel lblTeaminfo;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblemailaddress;
    private javax.swing.JLabel lblemailaddress1;
    private javax.swing.JTable tbProfiles;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtCellphonenumber;
    private javax.swing.JTextField txtEmailaddress;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtLevel;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPositiontitle;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtStartdate;
    private javax.swing.JTextField txtTeaminfo;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tbProfiles.getModel();
        model.setRowCount(0);
        
        for(EmployeeProfile ep : directory.getDirectory()){
            
            Object[] row = new Object[10];
            row[0] = ep;
            row[1] = ep.getId();
            row[2] = ep.getAge();
            row[3] = ep.getGender();
            row[4] = ep.getStartdate();
            row[5] = ep.getLevel();
            row[6] = ep.getTeaminfo();
            row[7] = ep.getPositiontitle();
            row[8] = ep.getPhonenumber();
            row[9] = ep.getEmailaddress();

                    
            model.addRow(row);        
        }
    }
}
